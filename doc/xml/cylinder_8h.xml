<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cylinder_8h" kind="file" language="C++">
    <compoundname>cylinder.h</compoundname>
    <includes refid="obstacle_8h" local="yes">obstacle.h</includes>
    <includedby refid="cylinder_8cpp" local="yes">src/cylinder.cpp</includedby>
    <includedby refid="cylindergammadistribution_8h" local="yes">src/cylindergammadistribution.h</includedby>
    <includedby refid="dynamics_simulation_8h" local="yes">src/dynamicsSimulation.h</includedby>
    <includedby refid="main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="walker_8cpp" local="yes">src/walker.cpp</includedby>
    <incdepgraph>
      <node id="254">
        <label>collision.h</label>
        <link refid="collision_8h_source"/>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="255">
        <label>Eigen/Core</label>
      </node>
      <node id="252">
        <label>src/cylinder.h</label>
        <link refid="cylinder_8h"/>
        <childnode refid="253" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>obstacle.h</label>
        <link refid="obstacle_8h_source"/>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>vector</label>
      </node>
      <node id="256">
        <label>walker.h</label>
        <link refid="walker_8h_source"/>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>collisionsphere.h</label>
        <link refid="collisionsphere_8h_source"/>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>iostream</label>
      </node>
      <node id="258">
        <label>deque</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="262">
        <label>src/cylindergammadistribution.h</label>
        <link refid="cylindergammadistribution_8h_source"/>
      </node>
      <node id="263">
        <label>src/dynamicsSimulation.h</label>
        <link refid="dynamics_simulation_8h_source"/>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>src/cylinder.h</label>
        <link refid="cylinder_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>src/mcsimulation.h</label>
        <link refid="mcsimulation_8h_source"/>
        <childnode refid="265" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>src/parallelmcsimulation.h</label>
        <link refid="parallelmcsimulation_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_cylinder" prot="public">Cylinder</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>CYLINDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYLINDER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;obstacle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_cylinder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cylinder" kindref="compound">Cylinder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_obstacle" kindref="compound">Obstacle</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_cylinder_1a9f367beb008c847b97bb0ce043601769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>P,<ref refid="class_cylinder_1a9f367beb008c847b97bb0ce043601769" kindref="member">Q</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="class_cylinder_1a2e7f0d4e406cc50daf30f3e3b0be1609" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/><ref refid="class_cylinder_1a2e7f0d4e406cc50daf30f3e3b0be1609" kindref="member">D</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="class_cylinder_1a8a825799285bcf60b49b8aef0459b498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cylinder_1a8a825799285bcf60b49b8aef0459b498" kindref="member">radius</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cylinder_1a01dc978cb576f834b9545e43d4dad2a2" kindref="member">Cylinder</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_cylinder" kindref="compound">Cylinder</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_cylinder_1a0a5f7aa0a0c5c5e17c783784fd99fa1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cylinder_1a0a5f7aa0a0c5c5e17c783784fd99fa1a" kindref="member">Cylinder</ref>(Eigen::Vector3d<sp/>P_,<sp/>Eigen::Vector3d<sp/>Q_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1):P(P_*scale),Q(Q_*scale),radius(radius_*scale){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/><sp/>=<sp/>(Q_-P_).normalized();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>=<sp/>P+<ref refid="class_cylinder_1a2e7f0d4e406cc50daf30f3e3b0be1609" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>count++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cylinder_1a01dc978cb576f834b9545e43d4dad2a2" kindref="member">Cylinder</ref>(<ref refid="class_cylinder" kindref="compound">Cylinder</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;cyl);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cylinder_1a43350a6331f8656dd0774a4a3b68724f" kindref="member">checkCollision</ref>(<ref refid="class_walker" kindref="compound">Walker</ref><sp/>&amp;walker,<sp/>Eigen::Vector3d<sp/>&amp;step,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;step_lenght,<sp/><ref refid="class_collision" kindref="compound">Collision</ref><sp/>&amp;colision);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cylinder_1a6eb639d12a7fc0aec50895151fb91b1f" kindref="member">minDistance</ref>(<ref refid="class_walker" kindref="compound">Walker</ref><sp/>&amp;w);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>handleCollition(<ref refid="class_walker" kindref="compound">Walker</ref>&amp;<sp/>walker,<sp/><ref refid="class_collision" kindref="compound">Collision</ref><sp/>&amp;colision,<sp/>Eigen::Vector3d&amp;<sp/>step,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>c,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>discr,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>step_length);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CYLINDER_H</highlight></codeline>
    </programlisting>
    <location file="src/cylinder.h"/>
  </compounddef>
</doxygen>
