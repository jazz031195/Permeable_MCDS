<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="collision_8cpp" kind="file" language="C++">
    <compoundname>collision.cpp</compoundname>
    <includes refid="collision_8h" local="yes">collision.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="1">
        <label>collision.h</label>
        <link refid="collision_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>Eigen/Core</label>
      </node>
      <node id="0">
        <label>src/collision.cpp</label>
        <link refid="collision_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="collision_8cpp_1a2349d985545cb94f40240e5ef6a1f908" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double EPS_VAL</definition>
        <argsstring></argsstring>
        <name>EPS_VAL</name>
        <initializer>= 1e-15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/collision.cpp" line="3" column="1" bodyfile="src/collision.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;collision.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EPS_VAL<sp/>=<sp/>1e-15;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="class_collision_1a19ae49bcb3b16f4622443a34a171590c" kindref="member">Collision::~Collision</ref>()</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_1aedabfa9b114e4201343963df5698f7ef" kindref="member">Collision::doIHaveMorePiorityThan</ref>(<ref refid="class_collision" kindref="compound">Collision</ref><sp/>&amp;coll)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>my<sp/>type<sp/>is<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coll.<ref refid="class_collision_1a384809577e353e0905047beac856015b" kindref="member">type</ref><sp/>==<sp/><ref refid="class_collision_1a384809577e353e0905047beac856015b" kindref="member">type</ref>){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_collision_1a195d201b0843d9f7190ac3a27761b4e7" kindref="member">t</ref><sp/>&lt;<sp/>coll.<ref refid="class_collision_1a195d201b0843d9f7190ac3a27761b4e7" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_collision_1a384809577e353e0905047beac856015b" kindref="member">type</ref><sp/>&lt;<sp/>coll.<ref refid="class_collision_1a384809577e353e0905047beac856015b" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>location<sp/>on<sp/>the<sp/>collision,<sp/>or<sp/>near<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Referent<sp/>to<sp/>be,<sp/>on<sp/>the<sp/>vertex,<sp/>on<sp/>the<sp/>edge,<sp/>or<sp/>inside.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_collision_1aa7ec5170357d8913c390defd844686e1" kindref="member">Collision::computeCollisionLocation</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_collision_1ae35c71ff91ffc9c253a345f0b4e2fbba" kindref="member">col_location</ref><sp/>=<sp/>unknown;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_edge_flag<sp/>=<sp/>(<sp/>std::abs(<ref refid="class_collision_1a6d79ffbca0e7f67fdc9af809f13f7f8a" kindref="member">u</ref>)<sp/>&lt;<sp/>EPS_VAL<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>u=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>on_edge_flag<sp/><sp/><sp/><sp/><sp/>|=<sp/>(<sp/>std::abs(<ref refid="class_collision_1ade5759fea1e6b41812d2499f1dc06c02" kindref="member">v</ref>)<sp/>&lt;<sp/>EPS_VAL);<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>v=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>on_edge_flag<sp/><sp/><sp/><sp/><sp/>|=<sp/>(<sp/>std::abs(1.0-<ref refid="class_collision_1a6d79ffbca0e7f67fdc9af809f13f7f8a" kindref="member">u</ref>-<ref refid="class_collision_1ade5759fea1e6b41812d2499f1dc06c02" kindref="member">v</ref>)<sp/>&lt;<sp/>EPS_VAL);<sp/><sp/></highlight><highlight class="comment">//<sp/>u+v<sp/>=<sp/>1<sp/>=&gt;<sp/>w=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(on_edge_flag){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_1ae35c71ff91ffc9c253a345f0b4e2fbba" kindref="member">col_location</ref><sp/>=<sp/>on_edge;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/collision.cpp"/>
  </compounddef>
</doxygen>
